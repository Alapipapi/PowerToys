<Page x:Class="ProjectsEditor.ProjectEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:props="clr-namespace:ProjectsEditor.Properties"
        xmlns:local="clr-namespace:ProjectsEditor"
        xmlns:models="clr-namespace:ProjectsEditor.Models"
        xmlns:controls="clr-namespace:ProjectsEditor.Controls"
        mc:Ignorable="d"
        Title="Project Editor"
        Background="{DynamicResource PrimaryBackgroundBrush}">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <Style x:Key="TextBlockEnabledStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False" >
                    <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonEnabledStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False" >
                    <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="headerTemplate">
            <Border
                HorizontalAlignment="Stretch">
                <TextBlock
                    DockPanel.Dock="Left"
                    Text="{Binding MonitorName}"
                    Foreground="{DynamicResource PrimaryForegroundBrush}"
                    FontSize="14"
                    FontWeight="Normal"
                    Margin="0,0,20,0"
                    VerticalAlignment="Center"/>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="appTemplate">
            <Border
                Background="{DynamicResource SecondaryBackgroundBrush}"
                MouseEnter="AppBorder_MouseEnter"
                MouseLeave="AppBorder_MouseLeave"
                Margin="1">
                <Expander
                    Margin="0 0 20 0"
                    FlowDirection="RightToLeft"
                    IsExpanded="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsIncluded, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Expander.Header>
                        <Grid 
                            FlowDirection="LeftToRight" 
                            HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Text="&#xE7BA;"
                                Foreground="#EED202"
                                FontSize="14"
                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                FontWeight="Normal"
                                Margin="5 0 0 0"
                                ToolTip="{x:Static props:Resources.NotFoundTooltip}"
                                Visibility="{Binding IsNotFound, Converter={StaticResource BoolToVis}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                VerticalAlignment="Center"/>
                            <Image
                                Grid.Column="1"
                                Width="20"
                                Height="20"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="10"
                                Source="{Binding IconBitmapImage}"/>
                            <TextBlock
                                Grid.Column="2"
                                Text="{Binding RepeatIndexString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Foreground="{DynamicResource PrimaryForegroundBrush}"
                                FontSize="14"
                                FontWeight="Normal"
                                Width="20"
                                VerticalAlignment="Center"/>
                            <StackPanel
                                Grid.Column="3"
                                VerticalAlignment="Center">
                                <TextBlock
                                    Text="{Binding AppName}"
                                    Foreground="{DynamicResource PrimaryForegroundBrush}"
                                    FontSize="14"
                                    FontWeight="Normal"
                                    />
                                <TextBlock
                                    Text="{Binding AppMainParams, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Foreground="{DynamicResource SecondaryForegroundBrush}"
                                    Visibility="{Binding IsAppMainParamVisible, Converter={StaticResource BoolToVis}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    FontSize="12"
                                    FontWeight="Normal"
                                    />
                            </StackPanel>
                            <controls:ResetIsEnabled
                                Grid.Column="4">
                                <Button
                                    Padding="24 6"
                                    Margin="10 5"
                                    Width="120"
                                    Content="{Binding DeleteButtonContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Background="{DynamicResource TertiaryBackgroundBrush}"
                                    AutomationProperties.Name="{x:Static props:Resources.Delete}"
                                    IsEnabled="True"
                                    Click="DeleteButtonClicked">
                                </Button>
                            </controls:ResetIsEnabled>
                        </Grid>
                    </Expander.Header>
                    <Grid
                        FlowDirection="LeftToRight"
                        Margin="-20 0 0 0"
                        HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                        Background="{DynamicResource QuaternaryBackgroundBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <DockPanel
                            Margin="100 5 0 0">
                            <TextBlock
                                Text="{x:Static props:Resources.CliArguments}"
                                Foreground="{DynamicResource PrimaryForegroundBrush}"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalAlignment="Center" />
                            <TextBox
                                Margin="15 0 50 0"
                                x:Name="CommandLineTextBox"
                                Text="{Binding CommandLineArguments, Mode=TwoWay}"
                                Foreground="{DynamicResource PrimaryForegroundBrush}"
                                Background="{DynamicResource TertiaryBackgroundBrush}"
                                BorderThickness="0"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                TextChanged="CommandLineTextBox_TextChanged"/>
                        </DockPanel>
                        <StackPanel
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Margin="100 5 0 0">
                            <CheckBox
                                Content="{x:Static props:Resources.LaunchAsAdmin}"
                                IsChecked="{Binding LaunchesAsAdmin, Mode=TwoWay}"
                                Visibility="Collapsed"
                                MinWidth="10"/>
                            <CheckBox
                                Margin="0 0 0 0"
                                Content="{x:Static props:Resources.Maximized}"
                                IsChecked="{Binding Maximized, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                MinWidth="10"
                                Checked="MaximizedChecked"/>
                            <CheckBox
                                Margin="15 0 0 0"
                                Content="{x:Static props:Resources.Minimized}"
                                IsChecked="{Binding Minimized, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                MinWidth="10"
                                Checked="MinimizedChecked"/>
                        </StackPanel>
                        <StackPanel
                            Orientation="Horizontal"
                            Grid.Row="2"
                            Margin="100 5 0 0">
                            <TextBlock
                                Style="{StaticResource TextBlockEnabledStyle}"
                                Text="{x:Static props:Resources.Left}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalAlignment="Center" />
                            <TextBox
                                Margin="15 0 0 0"
                                x:Name="LeftTextBox"
                                Text="{Binding Position.X, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Background="{DynamicResource TertiaryBackgroundBrush}"
                                BorderThickness="0"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                TextChanged="LeftTextBox_TextChanged"/>
                            <TextBlock
                                Text="{x:Static props:Resources.Top}"
                                Margin="15 0 0 0"
                                Style="{StaticResource TextBlockEnabledStyle}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalAlignment="Center" />
                            <TextBox
                                Margin="15 0 0 0"
                                x:Name="TopTextBox"
                                Text="{Binding Position.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Background="{DynamicResource TertiaryBackgroundBrush}"
                                BorderThickness="0"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                TextChanged="TopTextBox_TextChanged"/>
                            <TextBlock
                                Text="{x:Static props:Resources.Width}"
                                Margin="15 0 0 0"
                                Style="{StaticResource TextBlockEnabledStyle}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalAlignment="Center" />
                            <TextBox
                                Margin="15 0 0 0"
                                x:Name="WidthTextBox"
                                Text="{Binding Position.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Background="{DynamicResource TertiaryBackgroundBrush}"
                                BorderThickness="0"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                TextChanged="WidthTextBox_TextChanged"/>
                            <TextBlock
                                Text="{x:Static props:Resources.Height}"
                                Margin="15 0 0 0"
                                Style="{StaticResource TextBlockEnabledStyle}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalAlignment="Center" />
                            <TextBox
                                Margin="15 0 0 0"
                                x:Name="HeightTextBox"
                                Text="{Binding Position.Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding EditPositionEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Background="{DynamicResource TertiaryBackgroundBrush}"
                                BorderThickness="0"
                                FontSize="14"
                                FontWeight="Normal"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                TextChanged="HeightTextBox_TextChanged"/>
                        </StackPanel>
                    </Grid>
                </Expander>
            </Border>
        </DataTemplate>
        <models:AppListDataTemplateSelector
            HeaderTemplate="{StaticResource headerTemplate}"
            AppTemplate="{StaticResource appTemplate}"
            x:Key="AppListDataTemplateSelector"/>
    </Page.Resources>
    <Grid Margin="40,0,40,40">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button
                Margin="0,20,0,20" 
                Click="CancelButtonClicked"
                Background="Transparent"
                VerticalAlignment="Center">
                <TextBlock 
                    Text="{x:Static props:Resources.Projects}" 
                    FontSize="24" 
                    FontWeight="Normal" 
                    Foreground="{DynamicResource PrimaryForegroundBrush}"
                    VerticalAlignment="Center"/>
            </Button>
            <TextBlock
                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                Foreground="{DynamicResource PrimaryForegroundBrush}"
                FontSize="16"
                Margin="10,0,0,0"
                Text="&#xE76C;" 
                VerticalAlignment="Center"/>
            <TextBlock 
                Text="{Binding EditorWindowTitle}" 
                FontSize="24" 
                FontWeight="SemiBold" 
                Margin="10,0,0,0" 
                Foreground="{DynamicResource PrimaryForegroundBrush}"
                VerticalAlignment="Center"/>
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <TextBlock Text="{x:Static props:Resources.ProjectName}" FontSize="14" FontWeight="Normal" Foreground="{DynamicResource PrimaryForegroundBrush}"/>
            <TextBox
                x:Name="EditNameTextBox"
                Width="320"
                Text="{Binding Name, Mode=TwoWay}"
                Background="{DynamicResource SecondaryBackgroundBrush}"
                BorderBrush="{DynamicResource PrimaryBorderBrush}"
                BorderThickness="2"
                Margin="0,6,0,6"
                HorizontalAlignment="Left"
                GotFocus="EditNameTextBox_GotFocus"
                TextChanged="EditNameTextBox_TextChanged"
                KeyDown="EditNameTextBoxKeyDown" />
        </StackPanel>
        <Border
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            Background="{DynamicResource MonitorViewBackgroundBrush}"
            CornerRadius="5">
            <DockPanel>
                <Image
                    DockPanel.Dock="Top"
                    Width="{Binding PreviewImageWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Height="200"
                    Source="{Binding PreviewImage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Stretch="Fill"
                    Margin="2"/>
                <Button
                    DockPanel.Dock="Right"
                    x:Name="RevertButton"
                    Margin="0,0,20,10"
                    Height="36"
                    Padding="24,0,24,0"
                    IsEnabled="{Binding IsRevertEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="{x:Static props:Resources.Revert}"
                    Background="{DynamicResource SecondaryBackgroundBrush}"
                    AutomationProperties.Name="{x:Static props:Resources.Revert}"
                    HorizontalAlignment="Right"
                    Click="RevertButtonClicked"/>
                <Button
                    DockPanel.Dock="Right"
                    x:Name="LaunchEditButton"
                    Margin="0,0,10,10"
                    Height="36"
                    Padding="24,0,24,0"
                    Content="{x:Static props:Resources.LaunchEdit}"
                    Background="{DynamicResource SecondaryBackgroundBrush}"
                    AutomationProperties.Name="{x:Static props:Resources.LaunchEdit}"
                    HorizontalAlignment="Right"
                    Click="LaunchEditButtonClicked"/>
            </DockPanel>
        </Border>
        <ScrollViewer
            Margin="0,10,0,0"
            VerticalScrollBarVisibility="Auto"
            PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
            Grid.Row="4">
            <StackPanel Orientation="Vertical">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ItemsControl
                        ItemsSource="{Binding ApplicationsListed, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        ItemTemplateSelector="{StaticResource AppListDataTemplateSelector}">
                    </ItemsControl>
                </Grid>
            </StackPanel>
        </ScrollViewer>
        <DockPanel Grid.Row="5" Margin="0,20,0,20">
            <CheckBox
                DockPanel.Dock="Left"
                Content="{x:Static props:Resources.CreateShortcut}"
                IsChecked="{Binding IsShortcutNeeded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                FontSize="14"/>
            <StackPanel
                DockPanel.Dock="Right"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                Margin="40,0,0,0">
                <Button
                    x:Name="CancelButton"
                    Margin="20,0,0,0"
                    Height="36"
                    Padding="24,0,24,0"
                    Content="{x:Static props:Resources.Cancel}"
                    Background="{DynamicResource SecondaryBackgroundBrush}"
                    AutomationProperties.Name="{x:Static props:Resources.Cancel}"
                    Click="CancelButtonClicked">
                </Button>
                <Button
                    x:Name="SaveButton"
                    Margin="20,0,0,0"
                    Padding="24,0,24,0"
                    Height="36"
                    IsEnabled="{Binding CanBeSaved, UpdateSourceTrigger=PropertyChanged}"
                    Content="{x:Static props:Resources.Save_project}"
                    AutomationProperties.Name="{x:Static props:Resources.Save_project}"
                    Click="SaveButtonClicked"
                    Style="{StaticResource AccentButtonStyle}">
                </Button>
            </StackPanel>
        </DockPanel>
    </Grid>
</Page>
