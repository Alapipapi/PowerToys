parameters:
  configuration: 'Release'
  platform: ''
  
jobs:
- job: UITest
  displayName: UI Test ${{ parameters.platform }} ${{ parameters.configuration }}
  dependsOn: Build${{ parameters.platform }}${{ parameters.configuration }}
  pool:
    ${{ if eq(variables['System.CollectionUri'], 'https://dev.azure.com/ms/') }}:
      name: SHINE-OSS-Testing-x64
    ${{ if ne(variables['System.CollectionUri'], 'https://dev.azure.com/ms/') }}:
      name: SHINE-INT-Testing-x64
  steps:
  - checkout: none

  - task: DownloadPipelineArtifact@2
    displayName: Download artifacts
    inputs:
      artifact: build-${{ parameters.platform }}-${{ parameters.configuration }}
      path: $(Build.ArtifactStagingDirectory)

  - task: UseDotNet@2
    displayName: 'Use .NET 6 SDK'
    inputs:
      packageType: sdk
      version: '6.x'

  - task: UseDotNet@2
    displayName: 'Use .NET 8 SDK'
    inputs:
      packageType: sdk
      version: '8.x'
      includePreviewVersions: true

  - task: VisualStudioTestPlatformInstaller@1
    displayName: Ensure VSTest Platform

  - task: VSTest@2
    displayName: 'MS Tests'
    condition: ne(variables['BuildPlatform'], 'arm64') # No arm64 agents to run the tests.
    inputs:
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\UnitTests-FancyZonesEditor.dll
        !**\obj\**
        !**\ref\**

  - task: VSTest@2
    displayName: 'UI Tests'
    condition: ne(variables['BuildPlatform'], 'arm64') # No arm64 agents to run the tests.
    inputs:
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
      testSelector: 'testAssemblies'
      searchFolder: '$(Build.ArtifactStagingDirectory)'
      vstestLocationMethod: 'location'
      vstestLocation: 'D:\a\_work\_temp\VsTest'
      uiTests: true
      testAssemblyVer2: |
        **\UITests-FancyZones.dll
        **\UITests-FancyZonesEditor.dll
